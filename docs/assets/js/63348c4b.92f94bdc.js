"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[566],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9191:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"creating-and-using-fixtures",title:"Creating and using Fixtures",description:"How to create static factory builds",slug:"/usage/creating-and-using-fixtures"},c=void 0,l={unversionedId:"Usage/creating-and-using-fixtures",id:"Usage/creating-and-using-fixtures",isDocsHomePage:!1,title:"Creating and using Fixtures",description:"How to create static factory builds",source:"@site/docs/2-Usage/6-creating-and-using-fixtures.md",sourceDirName:"2-Usage",slug:"/usage/creating-and-using-fixtures",permalink:"/interface-forge/docs/usage/creating-and-using-fixtures",editUrl:"https://github.com/Goldziher/interface-forge/edit/gh-pages/docusaurus/docs/2-Usage/6-creating-and-using-fixtures.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"creating-and-using-fixtures",title:"Creating and using Fixtures",description:"How to create static factory builds",slug:"/usage/creating-and-using-fixtures"},sidebar:"tutorialSidebar",previous:{title:"Batch Building",permalink:"/interface-forge/docs/usage/batch-building"},next:{title:"FactorySchema",permalink:"/interface-forge/docs/Schema/factory-schema"}},u=[],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Interface Forge allows you to generate fixtures. This is useful when you do not want the result of a build to change\nwith every run, for example when snapshot testing frontend components."),(0,o.kt)("p",null,"To generate fixtures you should instantiate your factory using the ",(0,o.kt)("inlineCode",{parentName:"p"},"FixtureFactory")," class, instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"TypeFactory"),"\nwhich extends TypeFactory with four additional methods that allow you to save builds as fixtures: ",(0,o.kt)("inlineCode",{parentName:"p"},".fixture"),"\n, ",(0,o.kt)("inlineCode",{parentName:"p"},".fixtureSync"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".fixtureBatch")," and ",(0,o.kt)("inlineCode",{parentName:"p"},".fixtureBatchSync"),". The methods' naming corresponds to their respective build\nmethod, thus the methods also are respectively sync/async."),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"File Name")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Always make sure to choose a ",(0,o.kt)("strong",{parentName:"p"},"unique file name")," for each of your fixtures. Fixtures with the same file path and file naming will override each other and cause problems or unexpected behaviour."))),(0,o.kt)("p",null,"The FixtureFactory's methods require a file name or file path as the first parameter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=${projectRoot}/tests/User.spec.ts",title:"${projectRoot}/tests/User.spec.ts"},"import { FixtureFactory } from 'interface-forge';\nimport { User } from '../types';\n\nconst UserFactory = new FixtureFactory<User>({\n    // ...\n});\n\ndescribe('User', () => {\n    it('matches snapshot', async () => {\n        // compares stored data to a new build\n        // will be saved to: ${projectRoot}/__fixtures__/users.json\n        const users = await UserFactory.fixtureBatch(\n            // path.join() or path.resolve() are recommended\n            path.join(__dirname, '../users'),\n            3,\n        );\n\n        // if the comparison fails, a new fixture will have been saved\n        // so the snapshot should (and will) also fail\n        expect(users).toMatchSnapshot();\n    });\n    // ...\n});\n")),(0,o.kt)("p",null,"You can also designate a default path for all of a factory's builds by passing a third parameter to the constructor. The\nfile names or paths will then be appended to the designated default path:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=${projectRoot}/tests/Profile.spec.ts",title:"${projectRoot}/tests/Profile.spec.ts"},"import { FixtureFactory } from 'interface-forge';\nimport { Profile } from '../types';\n\nconst ProfileFactory = new FixtureFactory<Profile>(\n    {\n        // ...\n    },\n    undefined,\n    // path.join() or path.resolve() are recommended\n    path.resolve(__dirname), // ${projectRoot}/tests/\n);\n\ndescribe('Profile', () => {\n    it('matches snapshot', async () => {\n        // compares stored data to a new build\n        // will be saved to: ${projectRoot}/tests/__fixtures__/profile.json\n        const profile = ProfileFactory.fixtureSync('profile');\n\n        // if the comparison fails, a new fixture will have been saved\n        // so the snapshot should (and will) also fail\n        expect(profile).toMatchSnapshot();\n    });\n    // ...\n});\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"File Path")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"A file path ",(0,o.kt)("strong",{parentName:"p"},"must be")," an absolute path, otherwise an informative error will be thrown."))))}d.isMDXComponent=!0}}]);