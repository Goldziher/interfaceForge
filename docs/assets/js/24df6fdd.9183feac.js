(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[730],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return f},kt:function(){return d}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},f=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,g=u["".concat(c,".").concat(d)]||u[d]||p[d]||i;return t?n.createElement(g,o(o({ref:r},f),{},{components:t})):n.createElement(g,o({ref:r},f))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4925:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return f},default:function(){return u}});var n=t(2122),a=t(9756),i=(t(7294),t(3905)),o=["components"],s={id:"integrating-faker",title:"Integrating with FakerJS or ChanceJS",description:"Example of FakerJS or ChanceJS factory integration",slug:"/integrating-faker",sidebar_label:"FakerJS Integration",sidebar_position:4},c=void 0,l={unversionedId:"integrating-faker",id:"integrating-faker",isDocsHomePage:!1,title:"Integrating with FakerJS or ChanceJS",description:"Example of FakerJS or ChanceJS factory integration",source:"@site/docs/4-integration-with-faker-libraries-example.md",sourceDirName:".",slug:"/integrating-faker",permalink:"/interfaceForge/docs/integrating-faker",editUrl:"https://github.com/Goldziher/interfaceForge/edit/main/docs/docs/4-integration-with-faker-libraries-example.md",version:"current",sidebarPosition:4,frontMatter:{id:"integrating-faker",title:"Integrating with FakerJS or ChanceJS",description:"Example of FakerJS or ChanceJS factory integration",slug:"/integrating-faker",sidebar_label:"FakerJS Integration",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Using Generator Functions",permalink:"/interfaceForge/docs/factory-schema/using-generators"},next:{title:"Contributing",permalink:"/interfaceForge/docs/contributing"}},f=[],p={toc:f};function u(e){var r=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Integrating faker.js, chance.js and any other similar library in a factory is straightforward:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as faker from 'faker';\nimport { TypeFactory } from 'interface-forge';\nimport { UserProfile, User, Cat } from \"./types\"\n\ninterface User {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    address: string;\n    birthday: Date\n    isActive: boolean;\n    imageUrl: string;\n}\nexport const UserFactory = new TypeFactory<User>(() => {\n    id: faker.datatype.uuid();\n    firstName: faker.name.firstName();\n    lastName: faker.name.lastName();\n    email: faker.internet.email();\n    address: faker.address.streetAddress();\n    birthday: faker.date.past()\n    isActive: faker.datatype.boolean();\n    imageUrl: faker.internet.url();\n})\n")),(0,i.kt)("p",null,"Or as part of build args: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'const user = UserFactory.buildSync(() => ({\n    address: faker.address.streetAddress + ", " + faker.address.zipCode()\n}))\n')))}u.isMDXComponent=!0}}]);